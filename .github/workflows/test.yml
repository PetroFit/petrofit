name: Tests

on:
  workflow_dispatch: {}
  workflow_call: {}

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install hatch
        uses: pypa/hatch@install

      - name: Check code style
        run: hatch run style:code
        continue-on-error: true

      - name: Check docstrings
        run: hatch run style:docstrings
        continue-on-error: true

  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Pandoc
        run: sudo apt-get install pandoc

      - name: Install hatch
        uses: pypa/hatch@install

      - name: Build documentation
        run: hatch run docs:build
        
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install hatch
      uses: pypa/hatch@install

    - name: Check installation
      run: hatch run install:check

    - name: Check dependencies
      run: hatch run audit:check

    - name: Test suite
      run: hatch run +py=${{ matrix.python-version }} test:run

    - name: Report coverage
      shell: bash
      run: bash <(curl -s https://codecov.io/bash)
